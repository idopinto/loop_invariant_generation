[L25]              int counter = 0;
       VAL         [counter=0]
[L27]              int X, Y;
[L28]              long long x, y, v, xy, yx;
[L29]              X = __VERIFIER_nondet_int()
[L30]              Y = __VERIFIER_nondet_int()
[L31]              v = ((long long)2 * Y) - X
[L32]              y = 0
[L33]              x = 0
       VAL         [X=19, Y=1, counter=0, v=-17, x=0, y=0]
[L35]  EXPR        counter++
       VAL         [X=19, Y=1, counter=1, v=-17, x=0, y=0]
[L35]  COND TRUE   counter++ < 10
[L36]              yx = (long long)Y * x
[L37]              xy = (long long)X * y
       VAL         [X=19, Y=1, counter=1, v=-17, x=0, y=0]
[L38]  COND FALSE  !(!(x <= X))
       VAL         [X=19, Y=1, counter=1, v=-17, x=0, y=0]
[L43]  COND TRUE   v < 0
[L44]              v = v + (long long)2 * Y
       VAL         [X=19, Y=1, counter=1, v=-15, x=0, y=0]
[L49]              x++
       VAL         [X=19, Y=1, counter=1, v=-15, x=1, y=0]
[L35]  EXPR        counter++
       VAL         [X=19, Y=1, counter=2, v=-15, x=1, y=0]
[L35]  COND TRUE   counter++ < 10
[L36]              yx = (long long)Y * x
[L37]              xy = (long long)X * y
       VAL         [X=19, Y=1, counter=2, v=-15, x=1, y=0]
[L38]  COND FALSE  !(!(x <= X))
       VAL         [X=19, Y=1, counter=2, v=-15, x=1, y=0]
[L43]  COND TRUE   v < 0
[L44]              v = v + (long long)2 * Y
       VAL         [X=19, Y=1, counter=2, v=-13, x=1, y=0]
[L49]              x++
       VAL         [X=19, Y=1, counter=2, v=-13, x=2, y=0]
[L35]  EXPR        counter++
       VAL         [X=19, Y=1, counter=3, v=-13, x=2, y=0]
[L35]  COND TRUE   counter++ < 10
[L36]              yx = (long long)Y * x
[L37]              xy = (long long)X * y
       VAL         [X=19, Y=1, counter=3, v=-13, x=2, y=0]
[L38]  COND FALSE  !(!(x <= X))
       VAL         [X=19, Y=1, counter=3, v=-13, x=2, y=0]
[L43]  COND TRUE   v < 0
[L44]              v = v + (long long)2 * Y
       VAL         [X=19, Y=1, counter=3, v=-11, x=2, y=0]
[L49]              x++
       VAL         [X=19, Y=1, counter=3, v=-11, x=3, y=0]
[L35]  EXPR        counter++
       VAL         [X=19, Y=1, counter=4, v=-11, x=3, y=0]
[L35]  COND TRUE   counter++ < 10
[L36]              yx = (long long)Y * x
[L37]              xy = (long long)X * y
       VAL         [X=19, Y=1, counter=4, v=-11, x=3, y=0]
[L38]  COND FALSE  !(!(x <= X))
       VAL         [X=19, Y=1, counter=4, v=-11, x=3, y=0]
[L43]  COND TRUE   v < 0
[L44]              v = v + (long long)2 * Y
       VAL         [X=19, Y=1, counter=4, v=-9, x=3, y=0]
[L49]              x++
       VAL         [X=19, Y=1, counter=4, v=-9, x=4, y=0]
[L35]  EXPR        counter++
       VAL         [X=19, Y=1, counter=5, v=-9, x=4, y=0]
[L35]  COND TRUE   counter++ < 10
[L36]              yx = (long long)Y * x
[L37]              xy = (long long)X * y
       VAL         [X=19, Y=1, counter=5, v=-9, x=4, y=0]
[L38]  COND FALSE  !(!(x <= X))
       VAL         [X=19, Y=1, counter=5, v=-9, x=4, y=0]
[L43]  COND TRUE   v < 0
[L44]              v = v + (long long)2 * Y
       VAL         [X=19, Y=1, counter=5, v=-7, x=4, y=0]
[L49]              x++
       VAL         [X=19, Y=1, counter=5, v=-7, x=5, y=0]
[L35]  EXPR        counter++
       VAL         [X=19, Y=1, counter=6, v=-7, x=5, y=0]
[L35]  COND TRUE   counter++ < 10
[L36]              yx = (long long)Y * x
[L37]              xy = (long long)X * y
       VAL         [X=19, Y=1, counter=6, v=-7, x=5, y=0]
[L38]  COND FALSE  !(!(x <= X))
       VAL         [X=19, Y=1, counter=6, v=-7, x=5, y=0]
[L43]  COND TRUE   v < 0
[L44]              v = v + (long long)2 * Y
       VAL         [X=19, Y=1, counter=6, v=-5, x=5, y=0]
[L49]              x++
       VAL         [X=19, Y=1, counter=6, v=-5, x=6, y=0]
[L35]  EXPR        counter++
       VAL         [X=19, Y=1, counter=7, v=-5, x=6, y=0]
[L35]  COND TRUE   counter++ < 10
[L36]              yx = (long long)Y * x
[L37]              xy = (long long)X * y
       VAL         [X=19, Y=1, counter=7, v=-5, x=6, y=0]
[L38]  COND FALSE  !(!(x <= X))
       VAL         [X=19, Y=1, counter=7, v=-5, x=6, y=0]
[L43]  COND TRUE   v < 0
[L44]              v = v + (long long)2 * Y
       VAL         [X=19, Y=1, counter=7, v=-3, x=6, y=0]
[L49]              x++
       VAL         [X=19, Y=1, counter=7, v=-3, x=7, y=0]
[L35]  EXPR        counter++
       VAL         [X=19, Y=1, counter=8, v=-3, x=7, y=0]
[L35]  COND TRUE   counter++ < 10
[L36]              yx = (long long)Y * x
[L37]              xy = (long long)X * y
       VAL         [X=19, Y=1, counter=8, v=-3, x=7, y=0]
[L38]  COND FALSE  !(!(x <= X))
       VAL         [X=19, Y=1, counter=8, v=-3, x=7, y=0]
[L43]  COND TRUE   v < 0
[L44]              v = v + (long long)2 * Y
       VAL         [X=19, Y=1, counter=8, v=-1, x=7, y=0]
[L49]              x++
       VAL         [X=19, Y=1, counter=8, v=-1, x=8, y=0]
[L35]  EXPR        counter++
       VAL         [X=19, Y=1, counter=9, v=-1, x=8, y=0]
[L35]  COND TRUE   counter++ < 10
[L36]              yx = (long long)Y * x
[L37]              xy = (long long)X * y
       VAL         [X=19, Y=1, counter=9, v=-1, x=8, y=0]
[L38]  COND FALSE  !(!(x <= X))
       VAL         [X=19, Y=1, counter=9, v=-1, x=8, y=0]
[L43]  COND TRUE   v < 0
[L44]              v = v + (long long)2 * Y
       VAL         [X=19, Y=1, counter=9, v=1, x=8, y=0]
[L49]              x++
       VAL         [X=19, Y=1, counter=9, v=1, x=9, y=0]
[L35]  EXPR        counter++
       VAL         [X=19, Y=1, counter=10, v=1, x=9, y=0]
[L35]  COND TRUE   counter++ < 10
[L36]              yx = (long long)Y * x
[L37]              xy = (long long)X * y
       VAL         [X=19, Y=1, counter=10, v=1, x=9, y=0]
[L38]  COND FALSE  !(!(x <= X))
       VAL         [X=19, Y=1, counter=10, v=1, x=9, y=0]
[L43]  COND FALSE  !(v < 0)
[L46]              v = v + 2 * ((long long)Y - X)
[L47]              y++
       VAL         [X=19, Y=1, counter=10, v=-35, x=9, y=1]
[L49]              x++
       VAL         [X=19, Y=1, counter=10, v=-35, x=10, y=1]
[L35]  EXPR        counter++
       VAL         [X=19, Y=1, counter=11, v=-35, x=10, y=1]
[L35]  COND FALSE  !(counter++ < 10)
[L51]              xy = (long long)x * y
[L52]              yx = (long long)Y * x
[L53]  CALL        __VERIFIER_assert(2 * yx - 2 * xy - X + (long long)2 * Y - v + 2 * y == 0)
[L19]  COND TRUE   !(cond)
       VAL         [counter=11]
[L20]              reach_error()
       VAL         [counter=11]

